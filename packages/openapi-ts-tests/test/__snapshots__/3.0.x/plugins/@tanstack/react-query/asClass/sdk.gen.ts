// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer, urlSearchParamsBodySerializer } from '@hey-api/client-fetch';
import type { ExportData, PatchApiVbyApiVersionNoTagData, PatchApiVbyApiVersionNoTagResponses, ImportData, ImportResponses, FooWowData, FooWowResponses, ApiVVersionODataControllerCountData, ApiVVersionODataControllerCountResponses, GetApiVbyApiVersionSimpleOperationData, GetApiVbyApiVersionSimpleOperationResponses, GetApiVbyApiVersionSimpleOperationErrors, DeleteCallWithoutParametersAndResponseData, GetCallWithoutParametersAndResponseData, HeadCallWithoutParametersAndResponseData, OptionsCallWithoutParametersAndResponseData, PatchCallWithoutParametersAndResponseData, PostCallWithoutParametersAndResponseData, PutCallWithoutParametersAndResponseData, DeleteFooData3, CallWithDescriptionsData, DeprecatedCallData, CallWithParametersData, CallWithWeirdParameterNamesData, GetCallWithOptionalParamData, PostCallWithOptionalParamData, PostCallWithOptionalParamResponses, PostApiVbyApiVersionRequestBodyData, PostApiVbyApiVersionFormDataData, CallWithDefaultParametersData, CallWithDefaultOptionalParametersData, CallToTestOrderOfParamsData, DuplicateNameData, DuplicateName2Data, DuplicateName3Data, DuplicateName4Data, CallWithNoContentResponseData, CallWithNoContentResponseResponses, CallWithResponseAndNoContentResponseData, CallWithResponseAndNoContentResponseResponses, DummyAData, DummyAResponses, DummyBData, DummyBResponses, CallWithResponseData, CallWithResponseResponses, CallWithDuplicateResponsesData, CallWithDuplicateResponsesResponses, CallWithDuplicateResponsesErrors, CallWithResponsesData, CallWithResponsesResponses, CallWithResponsesErrors, CollectionFormatData, TypesData, TypesResponses, UploadFileData, UploadFileResponses, FileResponseData, FileResponseResponses, ComplexTypesData, ComplexTypesResponses, ComplexTypesErrors, MultipartResponseData, MultipartResponseResponses, MultipartRequestData, ComplexParamsData, ComplexParamsResponses, CallWithResultFromHeaderData, CallWithResultFromHeaderResponses, CallWithResultFromHeaderErrors, TestErrorCodeData, TestErrorCodeResponses, TestErrorCodeErrors, NonAsciiæøåÆøÅöôêÊ字符串Data, NonAsciiæøåÆøÅöôêÊ字符串Responses, PutWithFormUrlEncodedData } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class DefaultService {
    public static export<ThrowOnError extends boolean = false>(options?: Options<ExportData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/no+tag',
            ...options
        });
    }
    
    public static patchApiVbyApiVersionNoTag<ThrowOnError extends boolean = false>(options?: Options<PatchApiVbyApiVersionNoTagData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).patch<PatchApiVbyApiVersionNoTagResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/no+tag',
            ...options
        });
    }
    
    public static import<ThrowOnError extends boolean = false>(options: Options<ImportData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<ImportResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/no+tag',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static fooWow<ThrowOnError extends boolean = false>(options?: Options<FooWowData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).put<FooWowResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/no+tag',
            ...options
        });
    }
    
    public static getApiVbyApiVersionSimpleOperation<ThrowOnError extends boolean = false>(options: Options<GetApiVbyApiVersionSimpleOperationData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetApiVbyApiVersionSimpleOperationResponses, GetApiVbyApiVersionSimpleOperationErrors, ThrowOnError>({
            url: '/api/v{api-version}/simple:operation',
            ...options
        });
    }
    
}

export class SimpleService {
    public static apiVVersionODataControllerCount<ThrowOnError extends boolean = false>(options?: Options<ApiVVersionODataControllerCountData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ApiVVersionODataControllerCountResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple/$count',
            ...options
        });
    }
    
    public static deleteCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<DeleteCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static getCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<GetCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static headCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<HeadCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).head<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static optionsCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<OptionsCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).options<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static patchCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<PatchCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).patch<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static postCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<PostCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static putCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<PutCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
}

export class ParametersService {
    public static deleteFoo<ThrowOnError extends boolean = false>(options: Options<DeleteFooData3, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/foo/{foo_param}/bar/{BarParam}',
            ...options
        });
    }
    
    public static callWithParameters<ThrowOnError extends boolean = false>(options: Options<CallWithParametersData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/parameters/{parameterPath}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static callWithWeirdParameterNames<ThrowOnError extends boolean = false>(options: Options<CallWithWeirdParameterNamesData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/parameters/{parameter.path.1}/{parameter-path-2}/{PARAMETER-PATH-3}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static getCallWithOptionalParam<ThrowOnError extends boolean = false>(options: Options<GetCallWithOptionalParamData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/parameters',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static postCallWithOptionalParam<ThrowOnError extends boolean = false>(options: Options<PostCallWithOptionalParamData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostCallWithOptionalParamResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/parameters',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class DescriptionsService {
    public static callWithDescriptions<ThrowOnError extends boolean = false>(options?: Options<CallWithDescriptionsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/descriptions',
            ...options
        });
    }
    
}

export class DeprecatedService {
    /**
     * @deprecated
     */
    public static deprecatedCall<ThrowOnError extends boolean = false>(options: Options<DeprecatedCallData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/parameters/deprecated',
            ...options
        });
    }
    
}

export class RequestBodyService {
    public static postApiVbyApiVersionRequestBody<ThrowOnError extends boolean = false>(options?: Options<PostApiVbyApiVersionRequestBodyData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/requestBody',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class FormDataService {
    public static postApiVbyApiVersionFormData<ThrowOnError extends boolean = false>(options?: Options<PostApiVbyApiVersionFormDataData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            ...formDataBodySerializer,
            url: '/api/v{api-version}/formData',
            ...options,
            headers: {
                'Content-Type': null,
                ...options?.headers
            }
        });
    }
    
}

export class DefaultsService {
    public static callWithDefaultParameters<ThrowOnError extends boolean = false>(options?: Options<CallWithDefaultParametersData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/defaults',
            ...options
        });
    }
    
    public static callWithDefaultOptionalParameters<ThrowOnError extends boolean = false>(options?: Options<CallWithDefaultOptionalParametersData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/defaults',
            ...options
        });
    }
    
    public static callToTestOrderOfParams<ThrowOnError extends boolean = false>(options: Options<CallToTestOrderOfParamsData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/defaults',
            ...options
        });
    }
    
}

export class DuplicateService {
    public static duplicateName<ThrowOnError extends boolean = false>(options?: Options<DuplicateNameData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/duplicate',
            ...options
        });
    }
    
    public static duplicateName2<ThrowOnError extends boolean = false>(options?: Options<DuplicateName2Data, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/duplicate',
            ...options
        });
    }
    
    public static duplicateName3<ThrowOnError extends boolean = false>(options?: Options<DuplicateName3Data, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/duplicate',
            ...options
        });
    }
    
    public static duplicateName4<ThrowOnError extends boolean = false>(options?: Options<DuplicateName4Data, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/duplicate',
            ...options
        });
    }
    
}

export class NoContentService {
    public static callWithNoContentResponse<ThrowOnError extends boolean = false>(options?: Options<CallWithNoContentResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<CallWithNoContentResponseResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/no-content',
            ...options
        });
    }
    
    public static callWithResponseAndNoContentResponse<ThrowOnError extends boolean = false>(options?: Options<CallWithResponseAndNoContentResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<CallWithResponseAndNoContentResponseResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/response-and-no-content',
            ...options
        });
    }
    
}

export class ResponseService {
    public static callWithResponseAndNoContentResponse<ThrowOnError extends boolean = false>(options?: Options<CallWithResponseAndNoContentResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<CallWithResponseAndNoContentResponseResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/response-and-no-content',
            ...options
        });
    }
    
    public static callWithResponse<ThrowOnError extends boolean = false>(options?: Options<CallWithResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<CallWithResponseResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/response',
            ...options
        });
    }
    
    public static callWithDuplicateResponses<ThrowOnError extends boolean = false>(options?: Options<CallWithDuplicateResponsesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<CallWithDuplicateResponsesResponses, CallWithDuplicateResponsesErrors, ThrowOnError>({
            url: '/api/v{api-version}/response',
            ...options
        });
    }
    
    public static callWithResponses<ThrowOnError extends boolean = false>(options?: Options<CallWithResponsesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).put<CallWithResponsesResponses, CallWithResponsesErrors, ThrowOnError>({
            url: '/api/v{api-version}/response',
            ...options
        });
    }
    
}

export class MultipleTags1Service {
    public static dummyA<ThrowOnError extends boolean = false>(options?: Options<DummyAData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<DummyAResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/a',
            ...options
        });
    }
    
    public static dummyB<ThrowOnError extends boolean = false>(options?: Options<DummyBData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<DummyBResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/b',
            ...options
        });
    }
    
}

export class MultipleTags2Service {
    public static dummyA<ThrowOnError extends boolean = false>(options?: Options<DummyAData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<DummyAResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/a',
            ...options
        });
    }
    
    public static dummyB<ThrowOnError extends boolean = false>(options?: Options<DummyBData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<DummyBResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/b',
            ...options
        });
    }
    
}

export class MultipleTags3Service {
    public static dummyB<ThrowOnError extends boolean = false>(options?: Options<DummyBData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<DummyBResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/b',
            ...options
        });
    }
    
}

export class CollectionFormatService {
    public static collectionFormat<ThrowOnError extends boolean = false>(options: Options<CollectionFormatData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/collectionFormat',
            ...options
        });
    }
    
}

export class TypesService {
    public static types<ThrowOnError extends boolean = false>(options: Options<TypesData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<TypesResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/types',
            ...options
        });
    }
    
}

export class UploadService {
    public static uploadFile<ThrowOnError extends boolean = false>(options: Options<UploadFileData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<UploadFileResponses, unknown, ThrowOnError>({
            ...urlSearchParamsBodySerializer,
            url: '/api/v{api-version}/upload',
            ...options,
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                ...options?.headers
            }
        });
    }
    
}

export class FileResponseService {
    public static fileResponse<ThrowOnError extends boolean = false>(options: Options<FileResponseData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<FileResponseResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/file/{id}',
            ...options
        });
    }
    
}

export class ComplexService {
    public static complexTypes<ThrowOnError extends boolean = false>(options: Options<ComplexTypesData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<ComplexTypesResponses, ComplexTypesErrors, ThrowOnError>({
            url: '/api/v{api-version}/complex',
            ...options
        });
    }
    
    public static complexParams<ThrowOnError extends boolean = false>(options: Options<ComplexParamsData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<ComplexParamsResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/complex/{id}',
            ...options,
            headers: {
                'Content-Type': 'application/json-patch+json',
                ...options?.headers
            }
        });
    }
    
}

export class MultipartService {
    public static multipartResponse<ThrowOnError extends boolean = false>(options?: Options<MultipartResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<MultipartResponseResponses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multipart',
            ...options
        });
    }
    
    public static multipartRequest<ThrowOnError extends boolean = false>(options?: Options<MultipartRequestData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            ...formDataBodySerializer,
            url: '/api/v{api-version}/multipart',
            ...options,
            headers: {
                'Content-Type': null,
                ...options?.headers
            }
        });
    }
    
}

export class HeaderService {
    public static callWithResultFromHeader<ThrowOnError extends boolean = false>(options?: Options<CallWithResultFromHeaderData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<CallWithResultFromHeaderResponses, CallWithResultFromHeaderErrors, ThrowOnError>({
            url: '/api/v{api-version}/header',
            ...options
        });
    }
    
}

export class ErrorService {
    public static testErrorCode<ThrowOnError extends boolean = false>(options: Options<TestErrorCodeData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<TestErrorCodeResponses, TestErrorCodeErrors, ThrowOnError>({
            url: '/api/v{api-version}/error',
            ...options
        });
    }
    
}

export class NonAsciiÆøåÆøÅöôêÊService {
    public static nonAsciiæøåÆøÅöôêÊ字符串<ThrowOnError extends boolean = false>(options: Options<NonAsciiæøåÆøÅöôêÊ字符串Data, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<NonAsciiæøåÆøÅöôêÊ字符串Responses, unknown, ThrowOnError>({
            url: '/api/v{api-version}/non-ascii-æøåÆØÅöôêÊ字符串',
            ...options
        });
    }
    
    /**
     * Login User
     */
    public static putWithFormUrlEncoded<ThrowOnError extends boolean = false>(options: Options<PutWithFormUrlEncodedData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
            ...urlSearchParamsBodySerializer,
            url: '/api/v{api-version}/non-ascii-æøåÆØÅöôêÊ字符串',
            ...options,
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                ...options?.headers
            }
        });
    }
    
}